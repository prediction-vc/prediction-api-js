/**
 * Prediction Enterprise API
 * We are proud to introduce our 1.0.0 version of Prediction Enterprise API.  It is our first step to sharing our data with the world and being more transparent about our predictions, their accuracy and our fund trades and performance.  In the case you are missing some data please drop us a line at enterprise@prediction.vc. We will be happy to answer your questions and implement new features for you.  [Platform FAQ](https://predictionvc.freshdesk.com/support/solutions/) 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Ohlc'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Ohlc'));
  } else {
    // Browser globals (root is window)
    if (!root.PredictionEnterpriseApi) {
      root.PredictionEnterpriseApi = {};
    }
    root.PredictionEnterpriseApi.OHLCApi = factory(root.PredictionEnterpriseApi.ApiClient, root.PredictionEnterpriseApi.Ohlc);
  }
}(this, function(ApiClient, Ohlc) {
  'use strict';

  /**
   * OHLC service.
   * @module api/OHLCApi
   * @version 1.0.0
   */

  /**
   * Constructs a new OHLCApi. 
   * @alias module:api/OHLCApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * OHLC Data
     * OHLC Data
     * @param {String} symbol token symbol, e.g. ETH
     * @param {String} from historical data from this date, e.g 2018-09-01.
     * @param {String} to historical data till this date, e.g 2018-09-01.
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit results limit, default 10
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Ohlc} and HTTP response
     */
    this.ohlcGetWithHttpInfo = function(symbol, from, to, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'symbol' is set
      if (symbol === undefined || symbol === null) {
        throw new Error("Missing the required parameter 'symbol' when calling ohlcGet");
      }

      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling ohlcGet");
      }

      // verify the required parameter 'to' is set
      if (to === undefined || to === null) {
        throw new Error("Missing the required parameter 'to' when calling ohlcGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'symbol': symbol,
        'from': from,
        'to': to,
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Authorization'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Ohlc;

      return this.apiClient.callApi(
        '/ohlc', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * OHLC Data
     * OHLC Data
     * @param {String} symbol token symbol, e.g. ETH
     * @param {String} from historical data from this date, e.g 2018-09-01.
     * @param {String} to historical data till this date, e.g 2018-09-01.
     * @param {Object} opts Optional parameters
     * @param {String} opts.limit results limit, default 10
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Ohlc}
     */
    this.ohlcGet = function(symbol, from, to, opts) {
      return this.ohlcGetWithHttpInfo(symbol, from, to, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
